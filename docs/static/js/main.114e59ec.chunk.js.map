{"version":3,"sources":["icons.js","components/base/BaseComponents.js","components/menu/SourceSearch.js","components/menu/SourceDisplay.js","components/menu/TextSearch.js","components/Confession.js","components/PostFeed.js","components/menu/NameType.js","components/menu/NameSearch.js","App.js","registerServiceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","_ant_design_icons_lib_outline_CalendarOutline__WEBPACK_IMPORTED_MODULE_0__","_ant_design_icons_lib_outline_CalendarOutline__WEBPACK_IMPORTED_MODULE_0___default","n","d","a","Row","styled","div","_templateObject","BetweenRow","_templateObject2","_templateObject3","oneLine","css","_templateObject4","avenirNext","_templateObject5","highlightedBoxShadow","_templateObject6","_templateObject7","menuShadow","_templateObject8","DIN_FONT","_templateObject9","dinCSS","_templateObject10","Caption","_templateObject11","Column","_templateObject12","StaticVerticalItems","_templateObject13","border","VerticalItem","_templateObject14","StyledInput","input","_templateObject15","ShadowSearchbox","_templateObject16","StyledSpan","span","_templateObject17","Container","SourceSearch_templateObject","SuggestionItem","SourceSearch_templateObject2","props","selected","SearchMenu","SourceSearch_templateObject3","React","Component","SourceDisplay_templateObject","SourceDisplay_templateObject2","isFirst","StyledIcon","icon_default","SourceDisplay_templateObject3","hover","TextSearch","onKeyPress","e","nativeEvent","charCode","_this","onSubmit","inputElement","value","_this2","this","react_default","createElement","ref","Confession","DestyledLink","href","concat","confessionId","rel","target","StyledConfession","Header","SourceTitle","source","Confession_StyledMaterialIcon","icon","StyledInfo","style","marginRight","date","reacts","Total","WordWrappedParagraph","text","p","Confession_templateObject","Confession_templateObject2","StyledMaterialIcon","_ref","material_icons_react_default","size","className","Confession_templateObject3","Confession_templateObject4","Confession_templateObject5","Confession_templateObject6","PostFeed","containerElement","isLoading","hasMore","index","state","confessions","appendNextPosts","prevProps","queryParams","setState","url","URL","search","URLSearchParams","Object","objectSpread","fetch","then","result","json","catch","error","console","log","map","confession","fb_id","time","objectWithoutProperties","moment","unix","format","length","prevState","_this3","rect","lastChild","getBoundingClientRect","top","height","clientHeight","_this4","overflow","padding","onScroll","scrollTop","scrollHeight","components_Confession","key","group","NameTypeSelector","display","flexDirection","alignItems","marginTop","checkbox_default","defaultChecked","onChange","_","NameSearch","RangePicker","SettingsHeader","App_templateObject","SettingsPanel","App_templateObject2","App","App_templateObject3","suggestions","sources","timeRange","dayjs","Date","minReacts","searchPhrase","nameFilter","commented","tagged","row_default","col_default","justifyContent","maxWidth","NameSearch_NameSearch","name","NameType_NameTypeSelector","type","defineProperty","TextSearch_TextSearch","newTimeRange","defaultValue","slider_default","max","onAfterChange","newMinReacts","components_PostFeed","slimmedState","JSON","stringify","Math","trunc","valueOf","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","App_App","document","getElementById","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.114e59ec.chunk.js","sourcesContent":["export {\r\n    default as CalendarOutline\r\n} from '@ant-design/icons/lib/outline/CalendarOutline'","import styled, { css } from 'styled-components'\r\n\r\nexport const Row = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`\r\n\r\nexport const AroundRow = styled(Row)`\r\n    justify-content: space-around;\r\n`\r\n\r\nexport const BetweenRow = styled(Row)`\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const oneLine = css`\r\n    white-space: nowrap;\r\n`\r\n\r\nexport const mediumPadding = '20px';\r\n\r\nexport const avenirNext = css`\r\n    font-family: \"Avenir Next\";\r\n`\r\n\r\nexport const heavyBoxShadow = css`\r\n    box-shadow: rgba(193, 213, 224, 0.5) 0px 0px 40px;\r\n`\r\n\r\nexport const highlightedBoxShadow = css`\r\n    box-shadow: 0 2px 8px rgba(90, 46, 255, 0.25);\r\n`\r\n\r\nexport const menuShadow = css`\r\n    box-shadow: 0 2px 8px rgba(50, 60, 80, 0.15);\r\n    &:hover{\r\n        ${highlightedBoxShadow}\r\n    }\r\n    transition: box-shadow 0.3s;\r\n`\r\n\r\nexport const DIN_FONT = css`\r\n  font-family: \"DIN\";\r\n`\r\n\r\nexport const dinCSS = css`\r\n  text-transform: uppercase;\r\n  font-size: 11px;\r\n  font-weight: 700;\r\n  ${DIN_FONT}\r\n`\r\n\r\nexport const Caption = styled.div`\r\n  align-self: flex-start;\r\n  ${dinCSS}\r\n  margin-bottom: 5px;\r\n\r\n`\r\n\r\nexport const Column = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n`\r\n\r\nexport const StaticVerticalItems = styled(Column)`\r\n    background: white;\r\n    padding: 0px 11px;\r\n`\r\nexport const border = \"2px solid rgb(246, 248, 252)\"\r\n\r\nexport const VerticalItem = styled.div`\r\n    padding: 4px 0px;\r\n    border-top: ${border};\r\n`\r\nexport const sideBarHighlightTextColor = \"rgba(90, 46, 255, 1)\"\r\n\r\nexport const StyledInput = styled.input`\r\n    box-sizing: border-box;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    border: none;\r\n    padding: 6px 11px;\r\n    width: 100%;\r\n    height: 33px;\r\n    border-radius: 4px;\r\n`\r\n\r\nexport const ShadowSearchbox = styled(StyledInput)`\r\n    ${menuShadow}\r\n`\r\n\r\nexport const StyledSpan = styled.span`\r\n    text-transform: uppercase;\r\n    font-size: 11px;\r\n    font-family: \"DIN\";\r\n    font-weight: bolder;\r\n    color: rgb(148, 157, 170);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    flex-direction: column;\r\n`","import React from 'react'\r\nimport Downshift from 'downshift'\r\nimport { Caption, menuShadow, DIN_FONT, StaticVerticalItems, VerticalItem, sideBarHighlightTextColor, StyledInput } from '../base/BaseComponents'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    ${menuShadow}\r\n    ${DIN_FONT}\r\n`\r\n/*\r\nborder-top-left-radius: 4px;\r\nborder-top-right-radius: 4px;\r\nborder-bottom-left-radius: ${props => props.dropdownExists ? '0px' : '4px'};\r\nborder-bottom-right-radius: ${props => props.dropdownExists ? '0px' : '4px'}\r\n*/\r\n\r\n/*\r\nThere seems to be a bug in Downshift...\r\n*/\r\n\r\nconst SuggestionItem = styled(VerticalItem)`\r\n    color: ${props => props.selected ? sideBarHighlightTextColor : 'inherit'};\r\n`\r\n\r\nconst SearchMenu = styled(StaticVerticalItems)`\r\n    border-bottom-left-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n`\r\n\r\nclass SourceSearch extends React.Component {\r\n\r\n    state = {\r\n        inputValue: \"\",\r\n        selectedItem: \"\"\r\n    }\r\n\r\n    inputElementKeyPress = e => {\r\n        //TODO CODESMELL--duplicate code in text search.\r\n        if (e.nativeEvent.charCode === 13) {\r\n            if (this.props.items.indexOf(this.state.inputValue) > -1) {\r\n                this.props.onValueSelected(this.state.inputValue)\r\n                this.setState({\r\n                    inputValue: \"\",\r\n                    selectedItem: \"\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Downshift\r\n                itemToString={item => (item ? item : '')}\r\n                inputValue={this.state.inputValue}\r\n                onInputValueChange={newInputValue => {\r\n                    this.setState({\r\n                        inputValue: newInputValue,\r\n                        selectedItem: newInputValue\r\n                    })\r\n                }}\r\n                selectedItem={this.state.selectedItem}\r\n            >\r\n                {({\r\n                    getInputProps,\r\n                    getItemProps,\r\n                    getLabelProps,\r\n                    getMenuProps,\r\n                    isOpen,\r\n                    inputValue,\r\n                    highlightedIndex,\r\n                    selectedItem,\r\n                }) => {\r\n                    const displayedSuggestions = this.props.items\r\n                        .filter(item => !inputValue || item.includes(inputValue))\r\n                    const showSuggestions = isOpen && displayedSuggestions.length > 0\r\n\r\n                    return (\r\n                        <div>\r\n                            <Caption {...getLabelProps()}>Sources</Caption>\r\n                            <Container>\r\n                                <StyledInput\r\n                                    {...getInputProps({\r\n                                        onKeyPress: this.inputElementKeyPress\r\n                                    })}\r\n                                />\r\n                                {showSuggestions\r\n                                    ?\r\n                                    <SearchMenu {...getMenuProps()}>\r\n                                        {\r\n                                            displayedSuggestions.map((item, index) => (\r\n                                                <SuggestionItem\r\n                                                    {...getItemProps({\r\n                                                        key: item,\r\n                                                        index,\r\n                                                        item\r\n                                                    })}\r\n                                                    selected={highlightedIndex === index}\r\n                                                >\r\n                                                    {item}\r\n                                                </SuggestionItem>\r\n                                            ))\r\n                                        }\r\n                                    </SearchMenu>\r\n                                    : null}\r\n                            </Container>\r\n                        </div>)\r\n                }}\r\n            </Downshift>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SourceSearch\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StaticVerticalItems, DIN_FONT, border, menuShadow } from '../base/BaseComponents'\r\nimport { Icon } from 'antd'\r\n\r\nconst Suggestions = styled(StaticVerticalItems)`\r\n    ${menuShadow}\r\n    border-radius\r\n    : 4px;\r\n    ${DIN_FONT}\r\n`\r\nconst SourceRow = styled.div`\r\n    padding: 4px 0px;\r\n    border-top: ${props => props.isFirst ? 'inherit' : border};\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nconst SourceDisplay = props => (\r\n    <Suggestions>\r\n        {\r\n            props.sources.map((source, index) => (\r\n                <SourceRow\r\n                    isFirst={index === 0}\r\n                    key={source}\r\n                >\r\n                    <div>\r\n                        {source}\r\n                    </div>\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            props.onRemove(source)\r\n                        }}\r\n                    />\r\n                </SourceRow>\r\n            ))\r\n        }\r\n    </Suggestions>\r\n)\r\n\r\nclass IconButton extends React.Component {\r\n\r\n    state = {\r\n        hover: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledIcon\r\n                onMouseEnter={() => this.setState({ hover: true })}\r\n                onMouseLeave={() => this.setState({ hover: false })}\r\n                onClick={(this.props.onClick)}\r\n                type={this.state.hover ? 'close' : 'check'}\r\n                hover={`${this.state.hover}`} />\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledIcon = styled(Icon)`\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    color: ${props => props.hover ? 'rgb(31, 199, 148)' : '#FF3559'};\r\n`\r\n\r\nexport default SourceDisplay;","import React from 'react'\r\nimport { ShadowSearchbox } from '../base/BaseComponents'\r\n\r\n\r\nexport default class TextSearch extends React.Component {\r\n    render() {\r\n        return (\r\n            <ShadowSearchbox\r\n                ref={ref => this.inputElement = ref}\r\n                // TODO: Use debouncer, to refresh query after certain amount of time OR enter key press\r\n                onKeyPress={this.onKeyPress}\r\n            />\r\n        )\r\n    }\r\n\r\n    onKeyPress = e => {\r\n        if (e.nativeEvent.charCode === 13) {\r\n            this.props.onSubmit(this.inputElement.value)\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styled from 'styled-components'\r\nimport { Row, oneLine, mediumPadding, avenirNext, BetweenRow } from './base/BaseComponents'\r\nimport MaterialIcon from 'material-icons-react'\r\n\r\n\r\nconst Confession = props => (\r\n    <DestyledLink\r\n        href={`http://facebook.com/${props.confessionId}`}\r\n        rel={\"noopener noreferrer\"}\r\n        target={\"_blank\"}>\r\n        <StyledConfession>\r\n            <Header>\r\n                <Row>\r\n                    <SourceTitle>\r\n                        {props.source}\r\n                    </SourceTitle>\r\n                </Row>\r\n                <Row>\r\n                    <StyledMaterialIcon icon=\"date_range\" />\r\n                    <StyledInfo style={{ marginRight: '10px' }}>\r\n                        {props.date}\r\n                    </StyledInfo>\r\n                    <StyledMaterialIcon icon=\"person\" />\r\n                    <StyledInfo>\r\n                        {props.reacts.Total}\r\n                    </StyledInfo>\r\n                </Row>\r\n            </Header>\r\n            <WordWrappedParagraph>\r\n                {props.text}\r\n            </WordWrappedParagraph>\r\n        </StyledConfession>\r\n    </DestyledLink>\r\n)\r\n\r\nexport default Confession\r\n\r\nconst WordWrappedParagraph = styled.p`\r\n    overflow-wrap: break-word;\r\n    word-wrap: break-word;\r\n    word-break: break-word;\r\n    hyphens: auto;\r\n    white-space: pre-wrap;\r\n`\r\n\r\nconst DestyledLink = styled.a`\r\n    color: inherit;\r\n    text-decoration: none;\r\n`\r\n\r\nconst StyledMaterialIcon = ({ icon }) =>\r\n    <div style={{ marginRight: '5px' }}>\r\n        <MaterialIcon\r\n            icon={icon} size={23}\r\n            className=\"material-icons bottom-align\" />\r\n    </div>\r\n\r\nconst Header = styled(BetweenRow)`\r\n    padding-bottom: 10px\r\n`\r\n\r\nconst StyledInfo = styled.div`\r\n    ${avenirNext}\r\n    ${oneLine}\r\n    color: #5a2eff;\r\n    font-weight: 700;\r\n`\r\n\r\nconst StyledConfession = styled.div`\r\n    box-shadow: rgba(193, 213, 224, 0.35) 0px 0px 40px;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n    padding: ${mediumPadding};\r\n    margin-top: 50px;\r\n    margin-bottom: 50px;\r\n    background: #ffff;\r\n    transition: all 0.4s;\r\n    &:hover {\r\n        transform: scale(1.02);\r\n        box-shadow: 0 0 40px rgba(193, 213, 224, 0.75);\r\n    }\r\n`\r\n\r\nconst SourceTitle = styled.div`\r\n    ${avenirNext}\r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    ${oneLine}\r\n`","import React, { Component } from 'react'\r\nimport Confession from './Confession'\r\nimport moment from 'moment'\r\n\r\nclass PostFeed extends Component {\r\n\r\n    containerElement = null\r\n\r\n    isLoading = false\r\n    hasMore = true\r\n    index = 0\r\n\r\n    state = {\r\n        confessions: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.appendNextPosts()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.queryParams !== this.props.queryParams) {\r\n            this.hasMore = true\r\n            this.index = 0\r\n            this.setState({\r\n                confessions: []\r\n            }, () => {\r\n                this.appendNextPosts()\r\n            })\r\n        }\r\n    }\r\n\r\n    async appendNextPosts() {\r\n        this.isLoading = true\r\n        //const url = new URL(\"https://api.confs.app/confessions\")\r\n        const prodURL = 'https://api.confs.app/confessions'\r\n        const devURL = 'http://localhost:8000/confessions'\r\n        const url = new URL(prodURL)\r\n        url.search = new URLSearchParams({...this.props.queryParams, index: this.index })\r\n\r\n        let confessions = await fetch(url)\r\n            .then(result => result.json())\r\n            .catch(error => {\r\n                console.log(\"Failed to fetch data:\")\r\n                console.log(error)\r\n            })\r\n            \r\n        //Server sends confessions in batches of 10. If the batch is less than 10,\r\n        //the server is out\r\n        confessions = confessions.map(confession => {\r\n            const {fb_id, text, time, ...reacts} = confession\r\n            return {\r\n                fb_id,\r\n                text, \r\n                time: moment.unix(confession.time).format('MM-DD-YYYY'),\r\n                reacts\r\n            }\r\n        })\r\n        if (confessions.length < 10) {\r\n            this.hasMore = false\r\n        }\r\n        this.index += 1\r\n\r\n        this.isLoading = false\r\n        this.setState(prevState => ({\r\n            confessions: prevState.confessions.concat(confessions),\r\n        }), () => {\r\n            if (this.hasMore) {\r\n                const lastChild = this.containerElement.lastChild\r\n                const rect = lastChild.getBoundingClientRect()\r\n                if (rect.top + rect.height < this.containerElement.clientHeight) {\r\n                    this.appendNextPosts()\r\n                } else {\r\n                    this.isLoading = false\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{ height: \"100%\", overflow: \"auto\", padding: \"0px 20px\" }}\r\n                onScroll={() => {\r\n                    if (this.containerElement.clientHeight + this.containerElement.scrollTop >= this.containerElement.scrollHeight - (this.containerElement.clientHeight / 5)) {\r\n                        if (!this.isLoading && this.hasMore) {\r\n                            this.appendNextPosts()\r\n                        }\r\n                    }\r\n                }}\r\n                ref={ref => this.containerElement = ref}\r\n            >\r\n                {\r\n                    this.state.confessions.map(confession => (\r\n                        <Confession\r\n                            key={confession.fb_id}\r\n                            source={confession.group}\r\n                            date={confession.time}\r\n                            text={confession.text}\r\n                            confessionId={confession.fb_id}\r\n                            reacts={confession.reacts} />\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PostFeed\r\n","import React from 'react'\r\nimport { Checkbox } from 'antd'\r\nimport { StyledSpan } from '../base/BaseComponents'\r\n\r\nexport default class NameTypeSelector extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'stretch', marginTop: '5px' }}>\r\n                <Checkbox defaultChecked={true} onChange={_ => {\r\n                    this.props.onChange('commented')\r\n                }} />\r\n                <StyledSpan>Commented</StyledSpan>\r\n                <Checkbox defaultChecked={true} onChange={_ => {\r\n                    this.props.onChange('tagged')\r\n                }} />\r\n                <StyledSpan>Tagged</StyledSpan>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport { ShadowSearchbox } from '../base/BaseComponents'\r\n\r\nexport default class NameSearch extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ShadowSearchbox\r\n                ref={ref => this.inputElement = ref}\r\n                onKeyPress={this.onKeyPress}\r\n            />\r\n        )\r\n    }\r\n\r\n    onKeyPress = e => {\r\n        if (e.nativeEvent.charCode === 13) {\r\n            this.props.onSubmit(this.inputElement.value)\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n//import moment from \"moment\";\r\nimport dayjs from 'dayjs'\r\nimport \"./App.css\";\r\nimport { Row, Col, Slider, DatePicker } from 'antd';\r\nimport styled from 'styled-components'\r\nimport { avenirNext, Caption, StyledSpan } from \"./components/base/BaseComponents\";\r\nimport SourceSearch from \"./components/menu/SourceSearch\";\r\nimport SourceDisplay from \"./components/menu/SourceDisplay\";\r\nimport TextSearch from './components/menu/TextSearch'\r\nimport PostFeed from \"./components/PostFeed\";\r\nimport NameTypeSelector from \"./components/menu/NameType\";\r\nimport NameSearch from \"./components/menu/NameSearch\";\r\nconst { RangePicker } = DatePicker\r\n\r\nconst SettingsHeader = styled.div`\r\n  height: 64px;\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n  line-height: 64px;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  background: #141d24;\r\n  ${avenirNext}\r\n  color: #fff;\r\n  font-size: 24px;\r\n`\r\nconst SettingsPanel = styled.div`\r\n  height: 50vh;\r\n  min-height: 350px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  padding: 20px;\r\n  background: #F1F3F8;\r\n  border-bottom-left-radius: 10px;\r\n  border-bottom-right-radius: 10px;\r\n`\r\n\r\nconst HoverLink = styled(StyledSpan)`\r\n  font-size: 13px;\r\n  padding-top: 1vh;\r\n  transition: 0.3s;\r\n  &:hover {\r\n    color: rgb(90, 46, 255);\r\n  }\r\n`\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    suggestions: [\"MIT Summer Confessions\"],\r\n    sources: [\"MIT Confessions\"],\r\n    timeRange: [dayjs(new Date('2013', '00', '01')), dayjs()],\r\n    minReacts: 0,\r\n    searchPhrase: \"\",\r\n    nameFilter: \"\",\r\n    commented: true,\r\n    tagged: true,\r\n  }\r\n\r\n  render() {\r\n\r\n    //Can syntax be simplified? E.g - { timeRange } instead of {timeRange: timeRange}?\r\n    return (\r\n      <Row style={{ height: \"100%\" }}>\r\n        <Col span={10} style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 15px\" }}>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\", maxWidth: \"400px\" }}>\r\n            <SettingsHeader>Search</SettingsHeader>\r\n            <SettingsPanel>\r\n              <div>\r\n                <Caption>Name (Enter to Submit)</Caption>\r\n                <div>\r\n                  <NameSearch\r\n                    onSubmit={name => {\r\n                      this.setState({ nameFilter: name })\r\n                    }}\r\n                  />\r\n                  <NameTypeSelector\r\n                    /* don't change the commented/tagged keys in the state object unless you also\r\n                    change the values that are passed into onChange in NameSearch */\r\n                    onChange={type => {\r\n                      this.setState({\r\n                        [type]: !this.state[type]\r\n                      })\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <Caption>Included Text (Enter to Submit)</Caption>\r\n                <TextSearch\r\n                  onSubmit={value => {\r\n                    this.setState({\r\n                      searchPhrase: value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              {/*\r\n              <SourceSearch\r\n                items={this.state.suggestions}\r\n                onValueSelected={chosenValue => {\r\n                  const newSuggestions = this.state.suggestions.filter(item => item !== chosenValue)\r\n                  const newSources = this.state.sources.concat(chosenValue)\r\n                  this.setState({\r\n                    suggestions: newSuggestions,\r\n                    sources: newSources,\r\n                  })\r\n                }}\r\n\r\n              />\r\n              <SourceDisplay\r\n                sources={this.state.sources}\r\n                onRemove={removedSource => {\r\n                  this.setState({\r\n                    suggestions: this.state.suggestions.concat(removedSource),\r\n                    sources: this.state.sources.filter(source => source !== removedSource)\r\n                  })\r\n                }}\r\n              />\r\n              */}\r\n              <div>\r\n                <Caption>Date Range</Caption>\r\n                <RangePicker\r\n                  onChange={newTimeRange => {\r\n                    this.setState({ timeRange: newTimeRange })\r\n                  }}\r\n                  defaultValue={this.state.timeRange}>\r\n                </RangePicker>\r\n              </div>\r\n              <div>\r\n                <Caption>Reactions</Caption>\r\n                <Slider\r\n                  max={1000}\r\n                  defaultValue={this.state.minReacts}\r\n                  onAfterChange={newMinReacts => {\r\n                    if (this.state.minReacts !== newMinReacts) {\r\n                      this.setState({ minReacts: newMinReacts })\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            </SettingsPanel>\r\n          </div>\r\n          {/*\r\n          <a\r\n            href=\"http://hacklodge.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ textDecoration: 'none' }}>\r\n            <HoverLink style={{ fontSize: '13px', paddingTop: '1vh' }}>Built at Hacklodge</HoverLink>\r\n          </a>\r\n          */}\r\n        </Col>\r\n        <Col span={14} style={{ height: \"100%\" }}>\r\n          <PostFeed\r\n            queryParams={(\r\n              ({sources, suggestions, ...slimmedState}) => ({\r\n                  ...slimmedState,\r\n                  timeRange: JSON.stringify(slimmedState.timeRange.map(date => Math.trunc((date.valueOf() / 1000)))),\r\n                  name: slimmedState.nameFilter\r\n              }))(this.state)\r\n            }\r\n          />\r\n        </Col>\r\n      </Row >\r\n    )\r\n  }\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}